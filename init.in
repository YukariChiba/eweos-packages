#!/bin/ash -e

drop_to_shell() {
    printf 'Encountered an unexpected error, starting a shell\n'
    exec /bin/ash -l
}

# If anything happens before the final exec, drop to a shell
trap drop_to_shell EXIT

export PATH=/bin:/sbin:/usr/bin:/usr/sbin
mount -t proc proc /proc
mount -t devtmpfs dev /dev
mount -t sysfs sys /sys

set -- $(cat /proc/cmdline)
for word in "$@"; do
    case "$word" in
        root=UUID=*)
            partuuid="${word##*=}"
            rootdev=$(blkid | grep -i "$partuuid" | cut -d: -f1)
            ;;
        root=LABEL=*)
            partlabel="${word##*=}"
            rootdev=$(lsblk -o PATH,LABEL | grep "$partlabel" | cut -d ' ' -f1)
            ;;
        root=*)
	    rootdev="${word##*=}"
	    ;;
        livecd|rescue) rootdev=tmpfs ;;
    esac
done

install -d /mnt

if [ -z "$rootdev" ]; then
    rootdev=$(lsblk -o PATH,LABEL | grep "EWE_ROOT" | cut -d ' ' -f1)
    if [ -z "$rootdev" ]; then
        rootdev=tmpfs
    fi
fi

if [ "$rootdev" = 'tmpfs' ]; then
    root
    mount -t tmpfs tmpfs-root /mnt
    find / -not -path "/proc/*" -not -path "/sys/*" -not -path "/dev/*" | \
        cpio -dump /mnt >/dev/null 2>&1
else
    fsck -fy "$rootdev"
    mount "$rootdev" /mnt
fi

install -d /mnt/proc /mnt/dev /mnt/sys
[ -c /mnt/dev/console ] || mknod -m 600 /mnt/dev/console c 5 1
[ -c /mnt/dev/null ] || mknod -m 666 /mnt/dev/null c 1 3

exec switch_root /mnt /sbin/init
